# Siraone Project .Values annotations
siraone:
  subscription:
    username: ""
    password: ""

  deployment:
    dependencies:
      # Enable NFS dynamic provisioner for Kubernetes
      nfsServerProvisioner: true

    persistentRuntimeArtifacts:
      # Kubernetes Storage Class to be used to dynamically provision the relevant Persistent Volumes
      # Only persistent storage solutions supporting ReadWriteMany access mode are applicable (https://kubernetes.io/docs/concepts/storage/persistent-volumes/#access-modes)
      # Defaults to Kubernetes Storage Class generated using the NFS Server Provisioner (https://github.com/helm/charts/tree/master/stable/nfs-server-provisioner)
      storageClass: &storage_class "nfs"

      # Define capacities for persistent runtime artifact directories which are shared between instances of the distributed system
      sharedArtifacts:
        capacity:
          # For execution plans shared between the Traffic Manager profile instances
          dsdsharedartifacts: 20M
    dockerimage:
      # Container image configurations
      # If a custom image must be used, uncomment 'dockerRegistry' and provide its value
      # dockerRegistry: ""
      imageName: "shiransilva143/siraone"
      #imageTag: "dsdproject"
      # Refer to the Kubernetes documentation on updating images (https://quay.io/mshiransilva/sira:latest)
      imagePullPolicy: Always

      # Indicates whether the container is running
      livenessProbe:
        # Number of seconds after the container has started before liveness probes are initiated
        initialDelaySeconds: 20
        # How often (in seconds) to perform the probe
        periodSeconds: 10
      # Indicates whether the container is ready to service requests
      readinessProbe:
        # Number of seconds after the container has started before readiness probes are initiated
        initialDelaySeconds: 20
        # How often (in seconds) to perform the probe
        periodSeconds: 10

    resources:
      # These are the minimum resource recommendations for running dsd project
      requests:
        memory: "1Gi"
        cpu: "1000m"
      limits:
        memory: "2Gi"
        cpu: "1000m"

      # Configure Ingresses
    ingress:
      hostname: "siraone.ca"
      # Annotations for the pod services Ingress
      annotations:
        kubernetes.io/ingress.class: "nginx"
        nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
        nginx.ingress.kubernetes.io/affinity: "cookie"
        nginx.ingress.kubernetes.io/session-cookie-name: "route"
        nginx.ingress.kubernetes.io/session-cookie-hash: "sha1"
          
kubernetes:
  # Name of Kubernetes service account
  serviceAccount: "siraone-svc-account"

# Override sub chart parameters
mysql-am:
  mysql:
    persistence:
      storageClass: *storage_class
